CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME VARCHAR(10) NOT NULL,
    CONSTRAINT uc_rating_name UNIQUE (MPA_NAME)
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID   LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME VARCHAR(30) NOT NULL,
    CONSTRAINT uc_genre_name UNIQUE (GENRE_NAME)
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_NAME    VARCHAR(150),
    DESCRIPTION  VARCHAR(500) NOT NULL,
    RELEASE_DATE DATE         NOT NULL,
    DURATION     INTEGER      NOT NULL,
    MPA_ID       INTEGER, --NOT NULL,
    CONSTRAINT fk_film_rating_id FOREIGN KEY (MPA_ID) REFERENCES MPA (MPA_ID)
);

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID   LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL     VARCHAR(50) NOT NULL,
    LOGIN     VARCHAR(50) NOT NULL,
    USER_NAME VARCHAR(50) NOT NULL,
    BIRTHDAY  DATE        NOT NULL,
    CONSTRAINT uc_user_email UNIQUE (EMAIL),
    CONSTRAINT uc_user_login UNIQUE (LOGIN)
);

CREATE TABLE IF NOT EXISTS FILM_LIKE
(
    FILM_ID LONG NOT NULL,
    USER_ID LONG NOT NULL,
    CONSTRAINT pk_films_likes PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT fk_films_likes_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID),
    CONSTRAINT fk_films_likes_user_id FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    USER_ID   LONG NOT NULL,
    FRIEND_ID LONG NOT NULL,
    CONSTRAINT pk_friendship PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT fk_friendship_user_id1 FOREIGN KEY (USER_ID) REFERENCES users (USER_ID),
    CONSTRAINT fk_friendship_user_id2 FOREIGN KEY (FRIEND_ID) REFERENCES users (USER_ID)
);

CREATE TABLE IF NOT EXISTS GENRE_FILM
(
    FILM_ID  LONG NOT NULL,
    GENRE_ID LONG NOT NULL,
    CONSTRAINT pk_films_genres PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT fk_films_genres_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID),
    CONSTRAINT fk_films_genres_genre_id FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID)
);